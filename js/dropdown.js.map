{"version":3,"file":"dropdown.js","mappings":";;;;;;;;;;;;;AAAO,SAAS,WAAW;AACvB,QAAM,mBAAmB,SAAS,iBAAiB,oBAAoB;AAEvE,MAAI,CAAC,iBAAiB,OAAQ;AAE9B,mBAAiB,QAAQ,CAAC,YAAY;AAClC,UAAM,eAAe,QAAQ,cAAc,gBAAgB;AAE3D,QAAI,CAAC,aAAc;AAEnB,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAElB,UAAM,qBAAqB,MAAM;AAC7B,uBAAiB,aAAa;AAC9B,oBAAc,SAAS,cAAc,KAAK;AAC1C,qBAAe,aAAa,aAAa,YAAY;AACrD,eAAS,KAAK,YAAY,YAAY;AACtC,mBAAa,UAAU,IAAI,QAAQ;AACnC,cAAQ,UAAU,IAAI,MAAM;AAAA,IAChC;AAEA,UAAM,kBAAkB,MAAM;AAC1B,UAAI,kBAAkB,aAAa;AAC/B,qBAAa,UAAU,OAAO,QAAQ;AACtC,gBAAQ,UAAU,OAAO,MAAM;AAC/B,uBAAe,aAAa,cAAc,WAAW;AACrD,oBAAY,OAAO;AACnB,yBAAiB;AACjB,sBAAc;AAAA,MAClB;AAAA,IACJ;AAEA,UAAM,iBAAiB,CAAC,UAAU;AAC9B,YAAM,gBAAgB;AAEtB,uBAAiB,QAAQ,CAAC,iBAAiB;AACvC,YAAI,iBAAiB,WAAW,aAAa,UAAU,SAAS,MAAM,GAAG;AACrE,uBAAa,cAAc,gBAAgB,GAAG,UAAU,OAAO,QAAQ;AACtE,uBAAa,UAAU,OAAO,MAAM;AACpC,0BAAgB;AAAA,QACrB;AAAA,MACJ,CAAC;AAED,UAAI,aAAa,UAAU,SAAS,QAAQ,GAAG;AAC3C,wBAAgB;AAAA,MACpB,OAAO;AACJ,YAAI,kBAAkB,aAAY;AAChC,0BAAgB;AAAA,QAElB,OACI;AACF,6BAAmB;AAAA,QACrB;AAAA,MACH;AAAA,IACJ;AAEA,UAAM,gBAAgB,CAAC,UAAU;AAC5B,UAAG,MAAM,OAAO,QAAQ,gBAAgB,EAAG;AAE5C,UAAI,CAAC,QAAQ,SAAS,MAAM,MAAM,GAAG;AAE7B,wBAAgB;AAAA,MACxB;AAAA,IACJ;AAEA,YAAQ,iBAAiB,SAAS,cAAc;AAChD,aAAS,iBAAiB,SAAS,aAAa;AAAA,EAEpD,CAAC;AACL","sources":["webpack:///./utils/dropdown-menu.js"],"sourcesContent":["export function dropdown() {\n    const dropdownTriggers = document.querySelectorAll(\".nav-link-dropdown\");\n\n    if (!dropdownTriggers.length) return;\n\n    dropdownTriggers.forEach((trigger) => {\n        const dropdownMenu = trigger.querySelector(\".dropdown-menu\");\n\n        if (!dropdownMenu) return;\n\n        let originalParent = null;\n        let placeholder = null;\n\n        const moveDropdownToBody = () => {\n            originalParent = dropdownMenu.parentNode;\n            placeholder = document.createElement(\"div\");\n            originalParent.insertBefore(placeholder, dropdownMenu);\n            document.body.appendChild(dropdownMenu);\n            dropdownMenu.classList.add(\"active\");\n            trigger.classList.add(\"open\");\n        };\n\n        const restoreDropdown = () => {\n            if (originalParent && placeholder) {\n                dropdownMenu.classList.remove(\"active\");\n                trigger.classList.remove(\"open\");\n                originalParent.insertBefore(dropdownMenu, placeholder);\n                placeholder.remove();\n                originalParent = null;\n                placeholder = null;\n            }\n        };\n\n        const toggleDropdown = (event) => {\n            event.stopPropagation();\n\n            dropdownTriggers.forEach((otherTrigger) => {\n                if (otherTrigger !== trigger && otherTrigger.classList.contains(\"open\")) {\n                    otherTrigger.querySelector(\".dropdown-menu\")?.classList.remove(\"active\");\n                     otherTrigger.classList.remove(\"open\");\n                     restoreDropdown();\n                }\n            });\n\n            if (dropdownMenu.classList.contains(\"active\")) {\n                restoreDropdown();\n            } else {\n               if (originalParent && placeholder){\n                 restoreDropdown();\n\n               }\n               else{\n                 moveDropdownToBody();\n               }\n            }\n        };\n\n        const closeDropdown = (event) => {\n             if(event.target.closest(\".dropdown-menu\")) return;\n\n            if (!trigger.contains(event.target) ){\n\n                    restoreDropdown()\n            }\n        };\n\n        trigger.addEventListener(\"click\", toggleDropdown);\n        document.addEventListener(\"click\", closeDropdown);\n\n    });\n}\n"],"names":[],"sourceRoot":""}